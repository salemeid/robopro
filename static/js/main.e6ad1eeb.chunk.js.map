{"version":3,"sources":["components/card.js","components/card-list.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardMap","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobo","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAiBeA,EAfF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,mBACnB,gCACI,6BAAKF,IACL,4BAAIC,WCSLK,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEVC,EAAUD,EAAOE,KAAK,SAACC,EAAMC,GAC/B,OACI,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAKF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA7DU,MAGnB,OACI,mCACKH,KCGEI,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCAPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCoBJC,E,kDAtBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,8DAQDC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,+BAI3B,OAAIG,KAAKJ,MAAMC,SACJ,gEAEAG,KAAKX,MAAMK,a,GAjBHQ,aCwDZC,G,wDAjDX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,UAAWsB,EAAMC,OAAOC,SAjBxC,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,UAAW,IAJL,E,gEAOO,IAAD,OAEhByB,MAAM,8CACLC,MAAM,SAAAC,GACH,OAAOA,EAASC,UAEnBF,MAAM,SAAAG,GACH,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAQvB,IAAD,OACEC,EAAeb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAC1C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,UAAUiC,kBAGlE,GAA0B,IAAtBhB,KAAKJ,MAAMlB,OAGX,OACI,sBAAKJ,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,e,GArC5BX,cCIHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6ad1eeb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return(\r\n        <div className='bg-light-green dib br1 pa3 ma2 grow bw4 shadow-5'>\r\n            <img alt='logo' src={`https://robohash.org/${id}?size=200x180`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n\r\n    const cardMap = robots.map ((user, i)=>{\r\n        return (\r\n            <Card key={i} id={robots[i].id}  name={robots[i].name} email={robots[i].email}/>\r\n        )\r\n    })\r\n    return(\r\n        <>\r\n            {cardMap}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='Search Robot' \r\n            onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError : true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>oops someting wrong.... -.-!!!</h1>\r\n        } else {\r\n            return this.props.children\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component}from 'react';\r\nimport CardList from '../components/card-list';\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n// import { robots } from './robots';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            SearchBox: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    \r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( response => {\r\n            return response.json();\r\n        })\r\n        .then( users => {\r\n            this.setState({ robots: users });\r\n        })\r\n        \r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ SearchBox: event.target.value }) \r\n    }\r\n\r\n    render(){\r\n        const filteredRobo = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.SearchBox.toLowerCase())\r\n        })\r\n\r\n        if (this.state.robots === 0) {\r\n            <h1>Loading .....</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobo}/>\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }  \r\n    \r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}